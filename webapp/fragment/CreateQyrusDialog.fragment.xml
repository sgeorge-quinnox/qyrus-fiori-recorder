<core:FragmentDefinition xmlns="sap.m"
  xmlns:core="sap.ui.core"
  xmlns:form="sap.ui.layout.form">

  <Dialog id="createQyrusDialog"
          title="Create Test in Qyrus"
          stretchOnPhone="true"
          contentHeight="auto"
          contentWidth="42rem"
          class="sapUiMediumPadding">

    <content>
    <!-- sunils Table  -->
    <Table id="stepsTable"
                  inset="false"
                  class="sapUiSizeCondensed sapUiSizeCompact sapUiTinyMarginTop fixedTableHeight"
                  visibleRowCount="5"
                  visibleRowCountMode="Fixed"
                  alternateRowColors="true"
                  mode="None"
                  items="{steps>/}">
                <columns>
                    <Column hAlign="Center" width="7rem">
                        <Text text="Step Number"/>
                    </Column>
                    <Column width="7rem">
                        <Text text="Step Type"/>
                    </Column>
                    <Column minScreenWidth="Tablet" demandPopin="true">
                        <Text text="Field Name"/>
                    </Column>
                    <Column minScreenWidth="Tablet" demandPopin="true">
                        <Text text="Field Value"/>
                    </Column>
                </columns>
                <items>
                    <ColumnListItem vAlign="Middle" type="Inactive" press=".onRowPress" class="compactRow">
                        <cells>
                            <Text text="{steps>stepNumber}" textAlign="Center"/>
                            <Text text="{steps>actionType}"/>
                            <Text text="{steps>fieldName}"/>
                            <Text text="{steps>fieldValue}"/>
                        </cells>
                    </ColumnListItem>
                </items>
            </Table>
            <Table id="logsTable"
                  inset="false"
                  class="sapUiSizeCondensed sapUiSizeCompact sapUiTinyMarginTop fixedTableHeight"
                  visibleRowCountMode="Fixed"
                  alternateRowColors="true"
                  mode="None"
                  items="{logs>/}">
                <columns>
                    <Column hAlign="Center" width="7rem">
                        <Text text="Log Number"/>
                    </Column>
                    <Column width="7rem">
                        <Text text="Log Type"/>
                    </Column>
                    <Column minScreenWidth="Tablet" demandPopin="true">
                        <Text text="Log Message"/>
                    </Column>
                </columns>
                <items>
                    <ColumnListItem vAlign="Middle" type="Inactive" press=".onRowPress" class="compactRow">
                        <cells>
                            <Text text="{logs>stepNumber}" textAlign="Center"/>
                            <Text text="{logs>type}"/>
                            <Text text="{logs>message}"/>
                        </cells>
                    </ColumnListItem>
                </items>
            </Table>

      <form:SimpleForm id="qyrusForm"
                       editable="true"
                       layout="ResponsiveGridLayout"
                       labelSpanXL="3" labelSpanL="3" labelSpanM="4" labelSpanS="12"
                       adjustLabelSpan="false"
                       emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0"
                       columnsXL="2" columnsL="2" columnsM="1" singleContainerFullSize="false">
        <VBox>

          <!-- Helpers -->
          <HBox justifyContent="SpaceBetween" alignItems="Center">
            <!-- Left toggle -->
            <HBox width="48%" alignItems="Center" justifyContent="SpaceBetween" class="qyrRow">
              <Label id="lblInjectHelpers" text="Inject UI5 + OPA5 helpers" class="sapUiTinyMarginEnd"/>
              <CheckBox id="chkInjectHelpers"
                        selected="{qyrusForm>/injectHelpers}"
                        ariaLabelledBy="lblInjectHelpers"/>
            </HBox>

            <!-- Right toggle -->
            <HBox width="48%" alignItems="Center" justifyContent="SpaceBetween" class="qyrRow">
              <Label id="lblWaitEach" text="Wait before each action" class="sapUiTinyMarginEnd"/>
              <CheckBox id="chkWaitEach"
                        selected="{qyrusForm>/waitEach}"
                        ariaLabelledBy="lblWaitEach"/>
            </HBox>
          </HBox>


          <!-- Timeout & Poll -->
          <HBox justifyContent="SpaceBetween" alignItems="Center">
            <!-- Timeout -->
            <HBox width="48%" alignItems="Center" justifyContent="SpaceBetween" class="qyrRow">
              <Label id="lblTimeout" text="Timeout (ms)" class="sapUiTinyMarginEnd"/>
              <StepInput id="inpTimeout"
                        min="5" step="5"
                        value="{qyrusForm>/timeout}"
                        enabled="false"
                        editable="false"
                        width="12rem"
                        ariaLabelledBy="lblTimeout"/>
            </HBox>

            <!-- Poll interval -->
            <HBox width="48%" alignItems="Center" justifyContent="SpaceBetween" class="qyrRow">
              <Label id="lblPoll" text="Poll every (ms)" class="sapUiTinyMarginEnd"/>
              <StepInput id="inpPoll"
                        min="5" step="5"
                        value="{qyrusForm>/poll}"
                        enabled="false"
                        editable="false"
                        width="12rem"
                        ariaLabelledBy="lblPoll"/>
            </HBox>
          </HBox>


          
          <!-- Launch row: checkbox + input on the same line -->
          <HBox width="100%" alignItems="Center" justifyContent="Start" class="qyrRow">
            <CheckBox
              id="chkLaunch"
              text="Add launch URL"
              selected="{qyrusForm>/optLaunch}"
              class="sapUiTinyMarginEnd"/>
            
            <Input
              id="inpLaunch"
              value="{qyrusForm>/launchUrl}"
              placeholder="https://â€¦"
              enabled="{= ${qyrusForm>/optLaunch} }"
              width="100%">
              <layoutData>
                <FlexItemData growFactor="1"/>  <!-- make the input take remaining width -->
              </layoutData>
            </Input>
          </HBox>



          <!-- Wait toggles row -->
          <HBox width="100%" alignItems="Center" justifyContent="SpaceBetween">
            <HBox width="48%" alignItems="Center" class="qyrRow">
              <CheckBox id="chkWaitAfterLaunch"
                        text="Add wait after launch (sec)"
                        selected="{qyrusForm>/optWaitAfterLaunch}"/>
            </HBox>

            <HBox width="48%" alignItems="Center" class="qyrRow">
              <CheckBox id="chkWaitAfterLogin"
                        text="Add wait after login (sec)"
                        selected="{qyrusForm>/optWaitAfterLogin}"/>
            </HBox>
          </HBox>


          <!-- Login row: checkbox + user + password -->
          <HBox width="100%" alignItems="Center" justifyContent="Start" class="qyrRow">
            <CheckBox
              id="chkLogin"
              text="Add login step"
              selected="{qyrusForm>/optLogin}"
              class="sapUiTinyMarginEnd"/>

            <Input
              id="inpLoginUser"
              value="{qyrusForm>/loginUser}"
              placeholder="User"
              enabled="{= ${qyrusForm>/optLogin} }"
              width="100%">
              <layoutData><FlexItemData growFactor="1"/></layoutData>
            </Input>

            <Input
              id="inpLoginPass"
              type="Password"
              value="{qyrusForm>/loginPass}"
              placeholder="Password"
              enabled="{= ${qyrusForm>/optLogin} }"
              width="100%">
              <layoutData><FlexItemData growFactor="1"/></layoutData>
            </Input>
          </HBox>

          <!-- Convert button -->
          <!-- <Button type="Emphasized" text="Convert" press=".onConvertOpa5" class="sapUiSmallMarginTop" /> -->

          <!-- Teams and Service Stores -->
          <HBox justifyContent="SpaceBetween" alignItems="Center">
            <VBox width="48%">
              <Label text="Teams" />
              <Select id="teamSelect"
                      width="100%"
                      selectedKey="{qyrusForm>/teams/selectedId}"
                      change=".onTeamChanged"
                      items="{ path: 'qyrusForm>/teams/list' }">
                <core:Item key="{qyrusForm>id}" text="{qyrusForm>name}" />
              </Select>
            </VBox>
            <VBox width="48%">
              <Label text="Service Stores" />
              <Select id="serviceStoreSelect"
                      width="100%"
                      selectedKey="{qyrusForm>/serviceStores/selectedId}"
                      change=".onServiceStoreChanged"
                      items="{ path: 'qyrusForm>/serviceStores/list' }">
                <core:Item key="{qyrusForm>id}" text="{qyrusForm>name}" />
              </Select>
            </VBox>
          </HBox>

          <!-- Project and Module -->
          <HBox justifyContent="SpaceBetween" alignItems="Center">
            <VBox width="48%">
              <Label text="Project" />
              <Select id="projectSelect"
                      width="100%"
                      selectedKey="{qyrusForm>/projects/selectedId}"
                      change=".onProjectChanged"
                      items="{ path: 'qyrusForm>/projects/list' }">
                <core:Item key="{qyrusForm>id}" text="{qyrusForm>name}" />
              </Select>
            </VBox>
            <VBox width="48%">
              <Label text="Module" />
              <Select id="moduleSelect"
                      width="100%"
                      selectedKey="{qyrusForm>/modules/selectedId}"
                      items="{ path: 'qyrusForm>/modules/list' }">
                <core:Item key="{qyrusForm>id}" text="{qyrusForm>name}" />
              </Select>
            </VBox>
          </HBox>

          <!-- Test Name & Description -->
          <HBox justifyContent="SpaceBetween" alignItems="Center">
            <VBox width="48%">
              <Label text="Test Name" />
              <Input value="{qyrusForm>/testName}" width="100%" />
            </VBox>
            <VBox width="48%">
              <Label text="Test Description" />
              <Input value="{qyrusForm>/testDescription}" width="100%" />
            </VBox>
          </HBox>

          <!-- Test Objective -->
          <Label text="Test Objective" />
          <TextArea rows="3" width="100%" value="{qyrusForm>/testObjective}" />

        </VBox>
      </form:SimpleForm>
    </content>

    <!-- Dialog Buttons -->
    <buttons class="sapUiSmallPadding">
      <!-- <Button text="Create Headers" type="Transparent" press=".onCreateHeaders" /> -->
      <Button text="Create Test" type="Emphasized" press=".onCreateTest" />
      <Button text="Cancel" type="Transparent" press=".onCancelCreateQyrus" />
    </buttons>
  </Dialog>
</core:FragmentDefinition>
